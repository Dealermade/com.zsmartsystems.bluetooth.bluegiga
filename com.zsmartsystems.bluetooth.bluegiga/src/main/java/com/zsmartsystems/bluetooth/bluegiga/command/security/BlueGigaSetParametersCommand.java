/**
 * Copyright (c) 2014-2017 by the respective copyright holders.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.bluetooth.bluegiga.command.security;

import com.zsmartsystems.bluetooth.bluegiga.BlueGigaCommand;

/**
 * Class to implement the BlueGiga command <b>setParameters</b>.
 * <p>
 * This command is used to configure the local Security Manager and its features
 * <p>
 * This class provides methods for processing BlueGiga API commands.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson - Initial contribution of Java code generator
 */
public class BlueGigaSetParametersCommand extends BlueGigaCommand {
    public static int COMMAND_CLASS = 0x05;
    public static int COMMAND_METHOD = 0x01;

    /**
     * 1: Man-in-the-middle protection required. 0: No Man-in-the-middle protection. Default:
     * 0
     * <p>
     * BlueGiga API type is <i>uint8</i> - Java type is {@link int}
     */
    private int mitm;

    /**
     * Minimum key size in Bytes. Range: 7-16. Default: 7 (56bits)
     * <p>
     * BlueGiga API type is <i>uint8</i> - Java type is {@link int}
     */
    private int min_key_size;

    /**
     * Configures the local devices I/O capabilities. See: SMP IO Capabilities for options.
     * Default: No Input and No Output
     * <p>
     * BlueGiga API type is <i>uint8</i> - Java type is {@link int}
     */
    private int io_capabilities;
    /**
     * 1: Man-in-the-middle protection required. 0: No Man-in-the-middle protection. Default:
     * 0
     *
     * @param mitm the mitm to set as {@link int}
     */
    public void setMitm(int mitm) {
        this.mitm = mitm;
    }

    /**
     * Minimum key size in Bytes. Range: 7-16. Default: 7 (56bits)
     *
     * @param min_key_size the min_key_size to set as {@link int}
     */
    public void setMin_key_size(int min_key_size) {
        this.min_key_size = min_key_size;
    }

    /**
     * Configures the local devices I/O capabilities. See: SMP IO Capabilities for options.
     * Default: No Input and No Output
     *
     * @param io_capabilities the io_capabilities to set as {@link int}
     */
    public void setIo_capabilities(int io_capabilities) {
        this.io_capabilities = io_capabilities;
    }


    @Override
    public int[] serialize() {
        // Serialize the header
        serializeHeader(COMMAND_CLASS, COMMAND_METHOD);

        // Serialize the fields
        serializeUInt8(mitm);
        serializeUInt8(min_key_size);
        serializeUInt8(io_capabilities);

        return getPayload();
    }

    @Override
    public String toString() {
        final StringBuilder builder = new StringBuilder();
        builder.append("BlueGigaSetParametersCommand [mitm=");
        builder.append(mitm);
        builder.append(", min_key_size=");
        builder.append(min_key_size);
        builder.append(", io_capabilities=");
        builder.append(io_capabilities);
        builder.append("]");
        return builder.toString();
    }
}
