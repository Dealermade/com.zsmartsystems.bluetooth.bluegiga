package com.zsmartsystems.bluetooth.bluegiga.ember.autocode;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.StringWriter;

import com.zsmartsystems.bluetooth.bluegiga.ember.autocode.xml.Command;
import com.zsmartsystems.bluetooth.bluegiga.ember.autocode.xml.Protocol;

public class PacketProcessing extends ClassGenerator {
    final String mainPackage = "com.zsmartsystems.bluetooth.bluegiga";
    final String commandPackage = "com.zsmartsystems.bluetooth.bluegiga.command";

    public void go(Protocol protocol) throws FileNotFoundException {
        System.out.println("Processing command class list");

        StringWriter stringWriter = new StringWriter();
        PrintWriter out = new PrintWriter(stringWriter);

        clearImports();

        out.println("import java.util.HashMap;");
        out.println("import java.util.Map;");
        out.println("import java.util.Objects;");
        out.println();
        out.println("import java.lang.reflect.Constructor;");
        out.println("import java.lang.reflect.InvocationTargetException;");
        out.println("import com.zsmartsystems.bluetooth.bluegiga.BlueGigaResponse;");
        out.println("import org.slf4j.Logger;");
        out.println("import org.slf4j.LoggerFactory;");

        out.println();

        out.println("/**");
        out.println(
                " * Helper class to create BlueGiga BLE Response and Event packets (ie packets that we will receive).");
        out.println(" * <p>");
        out.println(" * Note that this code is autogenerated. Manual changes may be overwritten.");
        out.println(" *");
        out.println(" * @author Chris Jackson - Initial contribution of Java code generator");
        out.println(" */");
        out.println("class BlueGigaResponsePackets {");

        out.println();
        out.println("    private static Logger logger = LoggerFactory.getLogger(BlueGigaResponsePackets.class);");
        out.println();
        out.println("    final private static Map<Integer, Class<?>> packetMap = new HashMap<Integer, Class<?>>();");
        out.println();

        out.println("    static {");
        for (Command command : protocol.commands) {
            out.print("        packetMap.put(Objects.hash(");
            out.print(String.format("0x%02X, ", command.cmdClass));
            out.print(String.format("0x%02X, ", command.id));
            out.print(command.name.endsWith("Event"));
            out.print("), ");
            out.print("BlueGiga" + upperCaseFirstCharacter(command.name));
            if (!command.name.endsWith("Event")) {
                out.print("Response");
            }
            out.print(".class");
            out.print(")");

            if (command.name.endsWith("Event")) {
                addImport(commandPackage + "." + getClassName(command.cmdClass) + ".BlueGiga"
                        + upperCaseFirstCharacter(command.name));
            } else {
                addImport(commandPackage + "." + getClassName(command.cmdClass) + ".BlueGiga"
                        + upperCaseFirstCharacter(command.name) + "Response");
            }
            out.println(";");
        }
        out.println("    }");

        out.println();

        out.println("    public static BlueGigaResponse getPacket(int[] data) {");

        out.println("        int cmdClass = data[2];");
        out.println("        int cmdMethod = data[3];");
        out.println("        boolean isEvent = (data[0] & 0x80) != 0;");
        out.println();

        out.println("    	Class<?> bleClass = packetMap.get(Objects.hash(cmdClass, cmdMethod, isEvent));");
        out.println();
        out.println("    	if (bleClass == null) {");
        out.println("    		return null;");
        out.println("    	}");
        out.println();
        out.println("    	Constructor<?> ctor;");
        out.println();
        out.println("    	try {");
        out.println("    		ctor = bleClass.getConstructor(int[].class);");
        out.println("    		BlueGigaResponse bleFrame = (BlueGigaResponse) ctor.newInstance(data);");
        out.println("    		return bleFrame;");
        out.println(
                "    	} catch (NoSuchMethodException | SecurityException | InstantiationException | IllegalAccessException");
        out.println("    			| IllegalArgumentException | InvocationTargetException e) {");
        out.println("    		logger.error(\"Error instantiating BLE class\", e);");
        out.println("    	}");
        out.println();
        out.println("        return null;");
        out.println("    }");

        out.println("}");

        out.flush();

        File packageFile = new File(sourceRootPath + mainPackage.replace(".", "/"));
        PrintWriter outFile = getClassOut(packageFile, "BlueGigaResponsePackets");

        outputCopywrite(outFile);
        outFile.println("package " + mainPackage + ";");

        outFile.println();

        outputImports(outFile);

        outFile.println();
        outFile.print(stringWriter.toString());

        outFile.flush();
        outFile.close();

        out.close();
    }

}
